<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.alibaba.csp</groupId>
		<artifactId>sentinel-parent</artifactId>
		<version>1.8.6</version>
	</parent>

	<artifactId>sentinel-dashboard</artifactId>
	<packaging>jar</packaging>

	<properties>
		<resource.delimiter>@</resource.delimiter>
		<spring.boot.version>2.5.12</spring.boot.version>
		<spring.framework.version>5.3.18</spring.framework.version>
		<jackson.version>2.14.2</jackson.version>
		<lombok.version>1.18.20</lombok.version>
		<mapstruct.version>1.4.1.Final</mapstruct.version>

		<!-- 日志 -->
		<slf4j-api.version>1.7.36</slf4j-api.version>
		<log4j.version>1.2.17</log4j.version>

		<!-- 工具 -->
		<commons-lang.version>2.6</commons-lang.version>
		<commons-lang3.version>3.8.1</commons-lang3.version>
		<httpclient.version>4.5.13</httpclient.version>
		<httpcore.version>4.4.6</httpcore.version>
		<httpasyncclient.version>4.1.3</httpasyncclient.version>

		<!-- 存储流控规则 -->
		<apollo.version>1.2.0</apollo.version>
		<curator.version>4.0.1</curator.version>
		<nacos.version>2.2.3</nacos.version>

		<!-- 存储监控数据 -->
		<spring-kafka.version>2.9.1</spring-kafka.version>
		<influxdb.version>6.4.0</influxdb.version>

		<!-- 插件 -->
		<start-class>com.alibaba.csp.sentinel.dashboard.SentinelApplication</start-class>
		<jib-maven-plugin.version>2.2.0</jib-maven-plugin.version>
		<docker.image/>
		<docker.username/>
		<docker.password/>

		<!-- 测试 -->
		<system-rules.version>1.16.1</system-rules.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<artifactId>spring-aop</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<artifactId>spring-beans</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<artifactId>spring-expression</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<artifactId>spring-core</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<artifactId>spring-context</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<artifactId>spring-tx</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.framework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.alibaba.nacos</groupId>
				<artifactId>nacos-client</artifactId>
				<version>${nacos.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-web-servlet</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-transport-simple-http</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-parameter-flow-control</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-api-gateway-adapter-common</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit-jupiter-api</artifactId>
					<groupId>org.junit.jupiter</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 日志 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- 工具 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>httpcore</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-codec</artifactId>
					<groupId>commons-codec</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>${httpcore.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore-nio</artifactId>
			<version>${httpcore.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
			<version>${httpasyncclient.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>httpclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Nacos -->
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-datasource-nacos</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>snakeyaml</artifactId>
					<groupId>org.yaml</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-core</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpasyncclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Apollo -->
		<dependency>
			<groupId>com.ctrip.framework.apollo</groupId>
			<artifactId>apollo-openapi</artifactId>
			<version>${apollo.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-codec</artifactId>
					<groupId>commons-codec</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpcore</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>gson</artifactId>
					<groupId>com.google.code.gson</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Zookeeper -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>${curator.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- InfluxDB -->
		<dependency>
			<groupId>com.influxdb</groupId>
			<artifactId>influxdb-client-java</artifactId>
			<version>${influxdb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.influxdb</groupId>
			<artifactId>influxdb-client-flux</artifactId>
			<version>${influxdb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.influxdb</groupId>
			<artifactId>flux-dsl</artifactId>
			<version>${influxdb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.influxdb</groupId>
			<artifactId>influxdb-spring</artifactId>
			<version>${influxdb.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>micrometer-registry-influx</artifactId>
					<groupId>io.micrometer</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>${spring-kafka.version}</version>
		</dependency>

		<!-- Elasticsearch -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>snakeyaml</artifactId>
					<groupId>org.yaml</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j-api</artifactId>
					<groupId>org.apache.logging.log4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-core</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>HdrHistogram</artifactId>
					<groupId>org.hdrhistogram</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpasyncclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpcore-nio</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpcore</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-codec</artifactId>
					<groupId>commons-codec</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-rules</artifactId>
			<version>${system-rules.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>sentinel-dashboard</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<delimiters>
							<delimiter>${resource.delimiter}</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
							<path>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring.boot.version}</version>
							</path>
						</annotationProcessorPaths>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<showWarnings>false</showWarnings>
						<compilerArgs>
							<arg>-Xlint</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
					<configuration>
						<mainClass>${start-class}</mainClass>
						<layers>
							<enabled>true</enabled>
							<includeLayerTools>true</includeLayerTools>
							<configuration>
								${project.basedir}/src/main/docker/layers.xml
							</configuration>
						</layers>
					</configuration>
					<executions>
						<execution>
							<id>spring-boot-build-info</id>
							<phase>compile</phase>
							<goals>
								<goal>build-info</goal>
							</goals>
						</execution>
						<execution>
							<id>spring-boot-repackage</id>
							<phase>package</phase>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven.deploy.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- 容器化部署 -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<configuration>
					<from>
						<image>openjdk:11-jdk</image>
					</from>
					<to>
						<image>${docker.image}</image>
						<auth>
							<username>${docker.username}</username>
							<password>${docker.password}</password>
						</auth>
						<tags>
							<tag>${project.version}</tag>
						</tags>
					</to>
					<container>
						<entrypoint>
							<shell>bash</shell>
							<option>-c</option>
							<arg>/entrypoint.sh</arg>
						</entrypoint>
						<ports>
							<port>8080</port>
							<port>9080</port>
						</ports>
						<environment>
							<TZ>Asia/Shanghai</TZ>
							<LANG>C.UTF-8</LANG>
							<JVM_XMS>512m</JVM_XMS>
							<JVM_XMX>512m</JVM_XMX>
							<JVM_XSS>256k</JVM_XSS>
							<GC_MODE>G1</GC_MODE>
							<USE_GC_LOG>Y</USE_GC_LOG>
							<USE_HEAP_DUMP>Y</USE_HEAP_DUMP>
							<USE_LARGE_PAGES>N</USE_LARGE_PAGES>
							<SPRING_PROFILES_ACTIVE>dev</SPRING_PROFILES_ACTIVE>

							<AUTH_ENABLED>true</AUTH_ENABLED>
							<AUTH_USERNAME>sentinel</AUTH_USERNAME>
							<AUTH_PASSWORD>sentinel</AUTH_PASSWORD>

							<SENTINEL_RULE_TYPE>nacos</SENTINEL_RULE_TYPE>

							<SENTINEL_RULE_NACOS_SERVER_ADDR>localhost:8848</SENTINEL_RULE_NACOS_SERVER_ADDR>
							<SENTINEL_RULE_NACOS_NAMESPACE>demo</SENTINEL_RULE_NACOS_NAMESPACE>
							<SENTINEL_RULE_NACOS_GROUP_ID>sentinel</SENTINEL_RULE_NACOS_GROUP_ID>
							<SENTINEL_RULE_NACOS_USERNAME>nacos</SENTINEL_RULE_NACOS_USERNAME>
							<SENTINEL_RULE_NACOS_PASSWORD>nacos</SENTINEL_RULE_NACOS_PASSWORD>

							<SENTINEL_RULE_APOLLO_PORTAL_URL>http://localhost:10034</SENTINEL_RULE_APOLLO_PORTAL_URL>
							<SENTINEL_RULE_APOLLO_TOKEN/>
							<SENTINEL_RULE_APOLLO_ENV/>

							<SENTINEL_RULE_ZOOKEEPER_CONNECT_STRING>localhost:2181</SENTINEL_RULE_ZOOKEEPER_CONNECT_STRING>
							<SENTINEL_RULE_ZOOKEEPER_ROOT_PATH>/sentinel</SENTINEL_RULE_ZOOKEEPER_ROOT_PATH>

							<SENTINEL_METRICS_TYPE>memory</SENTINEL_METRICS_TYPE>

							<INFLUX_URL>http://localhost:8086/</INFLUX_URL>
							<INFLUX_TOKEN/>
							<INFLUX_ORG>sentinel</INFLUX_ORG>
							<INFLUX_BUCKET>sentinel</INFLUX_BUCKET>
							<INFLUX_LOG_LEVEL>NONE</INFLUX_LOG_LEVEL>
							<INFLUX_READ_TIMEOUT>10s</INFLUX_READ_TIMEOUT>
							<INFLUX_WRITE_TIMEOUT>10s</INFLUX_WRITE_TIMEOUT>
							<INFLUX_CONNECT_TIMEOUT>10s</INFLUX_CONNECT_TIMEOUT>

							<SENTINEL_METRICS_ELASTICSEARCH_INDEX_NAME>sentinel_metric</SENTINEL_METRICS_ELASTICSEARCH_INDEX_NAME>
							<SPRING_ELASTICSEARCH_REST_URIS>http://localhost:9200</SPRING_ELASTICSEARCH_REST_URIS>
							<SPRING_ELASTICSEARCH_REST_CONNECTION_TIMEOUT>3000</SPRING_ELASTICSEARCH_REST_CONNECTION_TIMEOUT>
							<SPRING_ELASTICSEARCH_REST_READ_TIMEOUT>5000</SPRING_ELASTICSEARCH_REST_READ_TIMEOUT>
							<SPRING_ELASTICSEARCH_REST_USERNAME/>
							<SPRING_ELASTICSEARCH_REST_PASSWORD/>

							<SENTINEL_METRICS_SENDER_TYPE>none</SENTINEL_METRICS_SENDER_TYPE>
							<SENTINEL_METRICS_SENDER_KAFKA_TOPIC>sentinel_metric</SENTINEL_METRICS_SENDER_KAFKA_TOPIC>
							<SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS>localhost:9092</SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS>
							<SPRING_KAFKA_PRODUCER_BATCH_SIZE>4096</SPRING_KAFKA_PRODUCER_BATCH_SIZE>
							<SPRING_KAFKA_PRODUCER_BUFFER_MEMORY>40960</SPRING_KAFKA_PRODUCER_BUFFER_MEMORY>
							<SPRING_KAFKA_PRODUCER_KEY_SERIALIZER>org.apache.kafka.common.serialization.StringSerializer</SPRING_KAFKA_PRODUCER_KEY_SERIALIZER>
							<SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER>org.apache.kafka.common.serialization.StringSerializer</SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER>
						</environment>
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						<mainClass>${start-class}</mainClass>
					</container>
					<extraDirectories>
						<paths>src/main/docker/jib</paths>
						<permissions>
							<permission>
								<file>/entrypoint.sh</file>
								<mode>755</mode>
							</permission>
						</permissions>
					</extraDirectories>
					<allowInsecureRegistries>true</allowInsecureRegistries>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>

			<resource>
				<directory>src/main/webapp/</directory>
				<excludes>
					<exclude>resources/node_modules/**</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
</project>
